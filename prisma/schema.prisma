// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Seller {
  id        String    @id @default(uuid()) @db.Uuid
  name      String    @db.VarChar(255)
  email     String    @unique
  products  Product[]
  orders    Order[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("udpated_at")

  @@map("sellers")
}

model Product {
  id            String   @id @default(uuid()) @db.Uuid
  name          String   @db.VarChar(255)
  description   String?  @db.VarChar(255)
  price         Float    @default(0)
  stockQuantity Int      @default(0) @map("stock_quantity")
  seller        Seller   @relation(fields: [sellerId], references: [id])
  sellerId      String   @map("seller_id") @db.Uuid
  orders        Order[]
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("udpated_at")

  @@map("products")
}

model Order {
  id         String   @id @default(uuid()) @db.Uuid
  seller     Seller   @relation(fields: [sellerId], references: [id])
  sellerId   String   @map("seller_id") @db.Uuid
  product    Product  @relation(fields: [productId], references: [id])
  productId  String   @map("product_id") @db.Uuid
  quantity   Int      @default(0)
  totalPrice Float    @default(0) @map("total_price")
  status     String
  orderDate  DateTime @default(now()) @map("order_date")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("udpated_at")

  @@map("orders")
}
